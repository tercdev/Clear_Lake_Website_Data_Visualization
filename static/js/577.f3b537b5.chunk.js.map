{"version":3,"file":"static/js/577.f3b537b5.chunk.js","mappings":"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","sources":["Components/Map.js","Components/pages/Home.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport LegendControl from 'mapboxgl-legend';\r\nimport './Map.css'\r\n\r\nimport { MapboxLegendControl } from \"@watergis/mapbox-gl-legend\";\r\nimport '@watergis/mapbox-gl-legend/css/styles.css';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiY2hlbmFsaSIsImEiOiJjbDBqY2V2bGowYjlrM2NtaXhjYzlyM2pxIn0.BxtrB0AyBeGd8lug5c6mUg';\r\n\r\nexport default function Map(props) {\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    const [lng, setLng] = useState(-122.8);\r\n    const [lat, setLat] = useState(39.06);\r\n    const [zoom, setZoom] = useState(10.5);\r\n\r\n    function addStreamMarkers() {\r\n        map.current.on('load', () => {\r\n            map.current.addSource('streams', {\r\n                type: 'geojson',\r\n                data: '/Clear_Lake_Website_Data_Visualization/data/streammarkers.geojson',\r\n            });\r\n            map.current.addLayer({\r\n                id: 'streams',\r\n                source: 'streams',\r\n                type: 'circle',\r\n                paint: {\r\n                    'circle-color': '#009E73',\r\n                    'circle-radius': 8,\r\n                    'circle-stroke-width': 2,\r\n                    'circle-stroke-color': '#ffffff',\r\n                },\r\n                metadata: {\r\n                    \"name\": \"Stream Monitoring Sites\"\r\n                }\r\n            });\r\n            map.current.on(\"mouseenter\", \"streams\", e => {\r\n                if (e.features.length) {\r\n                    map.current.getCanvas().style.cursor = \"pointer\";\r\n                }\r\n                streamPopUp(map,e);\r\n            });\r\n            map.current.on(\"mouseleave\", \"streams\", () => {\r\n                map.current.getCanvas().style.cursor = \"\";\r\n                closePopUp();\r\n            });\r\n            map.current.on(\"click\", \"streams\", e => {\r\n                console.log(e.features[0].properties.name);\r\n                window.location.href='/Clear_Lake_Website_Data_Visualization/'+e.features[0].properties.name;\r\n                // streamPopUp(map, e);\r\n            });\r\n        });\r\n    }\r\n    function closePopUp() {\r\n        const popup = document.getElementsByClassName('mapboxgl-popup');\r\n        if (popup.length) {\r\n            popup[0].remove();\r\n        }\r\n    }\r\n    function streamPopUp(map, e) {\r\n        if (e.features.length) {\r\n            map.current.getCanvas().style.cursor = \"pointer\";\r\n            const coordinates = e.features[0].geometry.coordinates.slice();\r\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n            const description = e.features[0].properties.name.charAt(0).toUpperCase() + e.features[0].properties.name.slice(1) + \" Creek\"\r\n            const contents = \"<a href='/Clear_Lake_Website_Data_Visualization/\" + e.features[0].properties.name + \"'>\" + description + \"</a>\"                    \r\n            new mapboxgl.Popup({focusAfterOpen: false, closeButton: false}).setLngLat(coordinates).setHTML(description).addTo(map.current)\r\n        }\r\n    }\r\n    function addMetMarkers() {\r\n        map.current.on('load', () => {\r\n            map.current.addSource('met', {\r\n                type: 'geojson',\r\n                data: '/Clear_Lake_Website_Data_Visualization/data/metmarkers.geojson',\r\n            });\r\n            map.current.addLayer({\r\n                id: 'met',\r\n                source: 'met',\r\n                type: 'circle',\r\n                paint: {\r\n                    'circle-color': '#999999',\r\n                    'circle-radius': 8,\r\n                    'circle-stroke-width': 2,\r\n                    'circle-stroke-color': '#ffffff',\r\n                },\r\n                metadata: {\r\n                    name: \"Meteorological Stations\",\r\n                }\r\n            });\r\n            map.current.on(\"mouseenter\", \"met\", e => {\r\n                if (e.features.length) {\r\n                    map.current.getCanvas().style.cursor = \"pointer\";\r\n                }\r\n                metPopUp(map,e);\r\n            });\r\n            map.current.on(\"mouseleave\", \"met\", () => {\r\n                map.current.getCanvas().style.cursor = \"\";\r\n                closePopUp();\r\n            });\r\n            map.current.on(\"click\", \"met\", e => {\r\n                console.log(e.features[0].properties.name);\r\n                window.location.href='/Clear_Lake_Website_Data_Visualization/'+e.features[0].properties.name;\r\n                // const link = \"/\" + e.features[0].properties.name\r\n                // return <Link to={link}></Link>\r\n                metPopUp(map,e);\r\n            });\r\n        });\r\n    }\r\n    function metPopUp(map,e) {\r\n        if (e.features.length) {\r\n            map.current.getCanvas().style.cursor = \"pointer\";\r\n            const coordinates = e.features[0].geometry.coordinates.slice();\r\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n            let description = \"\"\r\n            if (e.features[0].properties.name == \"bkp\") {\r\n                description = \"Buckingham Point\";\r\n            } else if (e.features[0].properties.name == \"nic\") {\r\n                description = \"Nice\"\r\n            } else if (e.features[0].properties.name == \"nlp\") {\r\n                description = \"North Lakeport\"\r\n            } else if (e.features[0].properties.name == \"bvr\") {\r\n                description = \"Big Valley Rancheria\"\r\n            } else if (e.features[0].properties.name == \"knb\") {\r\n                description = \"Konocti Bay\"\r\n            } else if (e.features[0].properties.name == \"clo\") {\r\n                description = \"Clearlake Oaks\"\r\n            } else if (e.features[0].properties.name == \"jgb\") {\r\n                description = \"Jago Bay\"\r\n            } else {\r\n                description = \"Beakbane Island\"\r\n            }\r\n            // description = \"<h1>\" + description + \"<h1/>\"\r\n            const link = \"<a href='/Clear_Lake_Website_Data_Visualization/\" + e.features[0].properties.name + \"'>\" + description + \"</a>\"\r\n            new mapboxgl.Popup({focusAfterOpen: false, closeButton: false}).setLngLat(coordinates).setHTML(description).addTo(map.current)\r\n        }\r\n    }\r\n    function addLakeMarkers() {\r\n        map.current.on('load', () => {\r\n            map.current.addSource('lake', {\r\n                type: 'geojson',\r\n                data: '/Clear_Lake_Website_Data_Visualization/data/lakemarkers.geojson',\r\n            });\r\n            map.current.addLayer({\r\n                id: 'lake',\r\n                source: 'lake',\r\n                type: 'circle',\r\n                paint: {\r\n                    'circle-color': '#E69F00',\r\n                    'circle-radius': 8,\r\n                    'circle-stroke-width': 2,\r\n                    'circle-stroke-color': '#ffffff',\r\n                },\r\n                metadata: {\r\n                    \"name\": \"Lake Monitoring Sites\",\r\n                }\r\n            });\r\n            map.current.on(\"mouseenter\", \"lake\", e => {\r\n                if (e.features.length) {\r\n                    map.current.getCanvas().style.cursor = \"pointer\";\r\n                }\r\n                lakePopUp(map,e);\r\n            });\r\n            map.current.on(\"mouseleave\", \"lake\", () => {\r\n                map.current.getCanvas().style.cursor = \"\";\r\n                closePopUp();\r\n            });\r\n            map.current.on(\"click\", \"lake\", e => {\r\n                console.log(e.features[0].properties.name);\r\n                window.location.href='/Clear_Lake_Website_Data_Visualization/'+e.features[0].properties.name;\r\n                lakePopUp(map,e);\r\n                // map.flyTo({\r\n                //     center: e.features[0].geometry.coordinates\r\n                // });\r\n            });\r\n        });\r\n    }\r\n    function lakePopUp(map,e) {\r\n        if (e.features.length) {\r\n            map.current.getCanvas().style.cursor = \"pointer\";\r\n            const coordinates = e.features[0].geometry.coordinates.slice();\r\n            while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n            }\r\n            const description = e.features[0].properties.name.slice(0,2).toUpperCase() + e.features[0].properties.name.slice(2).toUpperCase()\r\n            const link = \"<a href='/Clear_Lake_Website_Data_Visualization/\" + e.features[0].properties.name + \"'>\" + description + \"</a>\"\r\n            new mapboxgl.Popup({focusAfterOpen: false, closeButton: false}).setLngLat(coordinates).setHTML(description).addTo(map.current)\r\n        }\r\n    }\r\n    function addBoundary() {\r\n        map.current.on(\"load\", () => {\r\n            map.current.addSource('boundary', {\r\n                type: 'geojson',\r\n                data: '/Clear_Lake_Website_Data_Visualization/data/watershedboundary.geojson'\r\n            })\r\n            map.current.addLayer({\r\n                id: 'bounds_line',\r\n                source: 'boundary',\r\n                type: 'line',\r\n                // layout, paint\r\n                metadata: {\r\n                    \"name\": \"Clear Lake Watershed Boundary Line\"\r\n                }\r\n            },'waterway-label')\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (map.current) return; // initialize map only once\r\n        map.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [lng, lat],\r\n            zoom: zoom,\r\n            minZoom: 9,\r\n            maxBounds: [[-124.53, 36.94], [-120, 42.0]]\r\n        });\r\n        let targets = {}\r\n        if (props.name == \"stream\") {\r\n            addStreamMarkers();\r\n            targets.streams = \"Stream Monitoring Sites\"\r\n        }\r\n        if (props.name == \"met\") {\r\n            addMetMarkers();\r\n            targets.met = \"Meterological Stations\"\r\n        }\r\n        if (props.name == \"lake\") {\r\n            addLakeMarkers();\r\n            targets.lake = \"Lake Monitoring Sites\"\r\n        }\r\n        if (props.name == \"all\") {\r\n            addStreamMarkers();\r\n            addMetMarkers();\r\n            addLakeMarkers();\r\n            addBoundary();\r\n            targets.streams = \"Stream Monitoring Sites\"\r\n            targets.met = \"Meterological Stations\"\r\n            targets.lake = \"Lake Monitoring Sites\"\r\n            targets.bounds_line = \"Watershed Boundary\"\r\n        }\r\n        // const legend = new LegendControl({toggler: true, collapsed: true});\r\n        const legend = new MapboxLegendControl(targets, {accesstoken: mapboxgl.accessToken})\r\n        map.current.addControl(legend, 'bottom-left');\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!map.current) return; // wait for map to initialize\r\n        map.current.on('move', () => {\r\n            setLng(map.current.getCenter().lng.toFixed(4));\r\n            setLat(map.current.getCenter().lat.toFixed(4));\r\n            setZoom(map.current.getZoom().toFixed(2));\r\n        });\r\n    });\r\n\r\n    return (\r\n    <div className=\"map\">\r\n        <p className='map-caption'>Hover over markers to see the name of the location. Click on the marker to be redirected to a page with the corresponding visualizations.</p>\r\n        \r\n        <div ref={mapContainer} className=\"map-container\" />\r\n        <div className=\"sidebar\">\r\n            Longitude: {lng} | Latitude: {lat} | Zoom: {zoom}\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport Map from '../Map.js'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div>\r\n            <h1 className='home'>Clear Lake Data</h1>\r\n            <div className='mission-container'>\r\n                <h3 className=\"info-header\">TERC Clear Lake Mission</h3>\r\n                <p className=\"info-text\">UC Davis Tahoe Environmental Research Center (TERC) is engaged in a multi-year research study to \r\n                    understand the dominant processes in the Clear Lake watershed and within the lake itself that are \r\n                    negatively impacting the rehabilitation of lake water quality and ecosystem health. With funding \r\n                    provided by the California State Assembly, researchers are collecting a wide-variety of data to \r\n                    form the basis of a long-term monitoring strategy to measure status and trends in the future. \r\n                    A set of numerical models, calibrated and validated with these data, will be developed to inform \r\n                    local and State decision-making. Through partnerships and collaborations with local stakeholders \r\n                    and resource agencies, we aim to provide the science to guide better management of Clear Lake.</p>\r\n            </div>\r\n            <Map name=\"all\"/>\r\n        </div>\r\n    )\r\n}"],"names":["Map","props","mapContainer","useRef","map","useState","lng","setLng","lat","setLat","zoom","setZoom","addStreamMarkers","current","on","addSource","type","data","addLayer","id","source","paint","metadata","e","features","length","getCanvas","style","cursor","coordinates","geometry","slice","Math","abs","lngLat","description","properties","name","charAt","toUpperCase","mapboxgl","focusAfterOpen","closeButton","setLngLat","setHTML","addTo","streamPopUp","closePopUp","console","log","window","location","href","popup","document","getElementsByClassName","remove","addMetMarkers","metPopUp","addLakeMarkers","lakePopUp","useEffect","container","center","minZoom","maxBounds","targets","streams","met","lake","bounds_line","legend","MapboxLegendControl","accesstoken","addControl","getCenter","toFixed","getZoom","className","ref","Home"],"sourceRoot":""}