{"version":3,"file":"static/js/932.d66a28d7.chunk.js","mappings":"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","sources":["Components/DataDisclaimer.js","Components/DateRangePicker.js","Components/pages/met/MetChart.js","Components/pages/met/Met.js","Components/utils.js","../../../../../../../webpack/universalModuleDefinition","../../../../../../../webpack/bootstrap 866101db6e6d9c90b880","../../../../../../../highcharts-react.min.js","../../../../../../../src/HighchartsReact.js","../../../../../../../external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","../node_modules/highcharts/modules/windbarb.src.js"],"sourcesContent":["import React from 'react';\r\n\r\nimport './DataDisclaimer.css'\r\n\r\nfunction DataDisclaimer() {\r\n    return (\r\n        <div className='data-disclaimer'>\r\n            <p className='disclaimer1'>Note: These data are provisional and not error checked!</p>\r\n            <p className='disclaimer2'>These data were collected and are currently being processed and analyzed by \r\n                the UC Davis Tahoe Environmental Research Center (TERC). They are \r\n                considered preliminary. Do not use or distribute without written permission \r\n                from TERC.</p>\r\n            <p className='disclaimer2'>For all questions please contact Dr. Shohei Watanabe (swatanabe@ucdavis.edu) \r\n                or Dr. Alicia Cortes (alicortes@ucdavis.edu)</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DataDisclaimer;","import React from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./DateRangePicker.css\"\r\n\r\nimport { addDays, subDays } from './utils';\r\n\r\nfunction DateRangePicker(props) {\r\n    const today = new Date();\r\n    return (\r\n        <div className='date-container'>\r\n            <div className='one-date-container'>\r\n            <p className='date-label'>Start Date</p>\r\n            <DatePicker\r\n                selected={props.startDate}\r\n                onChange={props.handleStartDateChange}\r\n                selectsStart\r\n                startDate={props.startDate}\r\n                endDate={props.endDate}\r\n                minDate={subDays(props.endDate, props.maxDays)}\r\n                maxDate={props.endDate}\r\n            />\r\n            </div>\r\n            <div className='one-date-container'>\r\n            <p className='date-label'>End Date</p>\r\n            <DatePicker\r\n                selected={props.endDate}\r\n                onChange={props.handleEndDateChange}\r\n                selectsEnd\r\n                startDate={props.startDate}\r\n                endDate={props.endDate}\r\n                minDate={props.startDate}\r\n                maxDate={addDays(props.startDate, props.maxDays, today)}\r\n            />\r\n            </div>\r\n            <div className='one-date-container'>\r\n                <button className=\"submitButton\" onClick={props.setGraphDates}>Submit</button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DateRangePicker;","import React, {useState,useEffect,useRef } from 'react'\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport { convertDate } from '../../utils.js';\r\nimport useFetch from 'react-fetch-hook';\r\n\r\nimport highchartsWindbarb from 'highcharts/modules/windbarb';\r\n\r\nhighchartsWindbarb(Highcharts);\r\n\r\nfunction convertGMTtoPSTTime (date) {\r\n    // reference: https://stackoverflow.com/questions/22493924/get-user-time-and-convert-them-to-pst\r\n    var offset = 420; \r\n    var offsetMillis = offset * 60 * 1000;\r\n    var today = date;\r\n    var millis = today.getTime();\r\n    var timeZoneOffset = (today.getTimezoneOffset() * 60 * 1000);\r\n\r\n    var pst = millis - offsetMillis; \r\n    return new Date(today.getTime() - timeZoneOffset);\r\n}\r\n//conversion from API cardinal to prgm degree\r\nfunction cardinalToDeg(direction) {\r\n    if (parseFloat(direction) == direction) {\r\n        return parseFloat(direction)\r\n    }\r\n    if (direction == 'N') {\r\n        return 0\r\n    };\r\n    if (direction == 'NNE') {\r\n        return 22.5\r\n    };\r\n    if (direction == 'NE') {\r\n        return 45\r\n    };\r\n    if (direction == 'ENE') {\r\n        return 67.5\r\n    };\r\n    if (direction == 'E') {\r\n        return 90\r\n    };\r\n    if (direction == 'ESE') {\r\n        return 112.5\r\n    };\r\n    if (direction == 'SE') {\r\n        return 135\r\n    };\r\n    if (direction == 'SSE') {\r\n        return 157.5\r\n    };\r\n    if (direction == 'S') {\r\n        return 180\r\n    };\r\n    if (direction == 'SSW') {\r\n        return 202.5\r\n    };\r\n    if (direction == 'SW') {\r\n        return 225\r\n    };\r\n    if (direction == 'WSW') {\r\n        return 247.5\r\n    };\r\n    if (direction == 'W') {\r\n        return 270\r\n    };\r\n    if (direction == 'WNW') {\r\n        return 292.5\r\n    };\r\n    if (direction == 'NW') {\r\n        return 315\r\n    };\r\n    if (direction == 'NNW') {\r\n        return 337.5\r\n    };\r\n\r\n    return 0\r\n    // direction == ---\r\n}  \r\n  // get data based on graph type\r\nfunction getFilteredData(data, dataType) {\r\n    let m = [];\r\n    // if (dataType == \"Turb_BES\") {\r\n    //     var data = cleanTurbMeanData(data,dataType)\r\n    // }\r\n    data.forEach((element => {\r\n        // let pstTime = convertGMTtoPSTTime(new Date(element.DateTime_UTC));\r\n        let pstTime = new Date(element.DateTime_UTC);\r\n        if (dataType == \"Wind_Dir\") {\r\n            m.push([pstTime.getTime(), cardinalToDeg(element[dataType])]);\r\n        } else {\r\n            m.push([pstTime.getTime(), parseFloat(element[dataType])]);\r\n        }\r\n    }));\r\n    return m.reverse();\r\n}\r\nfunction getWindbarbData(data) {\r\n    let m = [];\r\n    data.forEach((element => {\r\n        let pstTime = convertGMTtoPSTTime(new Date(element.DateTime_UTC));\r\n        m.push([pstTime.getTime(), parseFloat(element[\"Wind_Speed\"]), cardinalToDeg(element[\"Wind_Dir\"])])\r\n    }))\r\n    return m.reverse();\r\n}\r\n\r\nfunction removePast(data, date) {\r\n    if (date == undefined) {\r\n        return data;\r\n    }\r\n    let i = 0;\r\n    while (data[i][0] <= date) {\r\n        data.shift();\r\n    }\r\n    return data;\r\n}\r\nexport default function MetChart({\r\n    fromDate,\r\n    endDate,\r\n    id,\r\n    dataType,\r\n    dataType2=null,\r\n    chartProps\r\n}) {\r\n\r\n  const chartComponent = useRef(null); \r\n  const [chartOptions, setChartOptions] = useState(chartProps)\r\n  var real_time_url = new URL('https://tepfsail50.execute-api.us-west-2.amazonaws.com/v1/report/metweatherlink');\r\n  var clean_data_url = new URL('https://4ery4fbt1i.execute-api.us-west-2.amazonaws.com/default/clearlake-met');\r\n  let real_search_params = real_time_url.searchParams;\r\n  real_search_params.set('id',id);\r\n\r\n  real_search_params.set('rptdate', convertDate(fromDate)); // at most 180 days away from endDate\r\n  real_search_params.set('rptend', convertDate(endDate));\r\n  real_time_url.search = real_search_params.toString();\r\n\r\n  var url = new URL('https://4ery4fbt1i.execute-api.us-west-2.amazonaws.com/default/clearlake-met');\r\n  var search_params = url.searchParams;\r\n  search_params.set('id',id);\r\n  search_params.set('start',convertDate(fromDate));\r\n  search_params.set('end',convertDate(endDate));\r\n  url.search = search_params.toString();\r\n\r\n  var new_url = url.toString();\r\n  const {isLoading,data} = useFetch(new_url);\r\n\r\n  const realTimeData = useFetch(real_time_url.toString());\r\n\r\n  useEffect(()=> {\r\n    console.log(isLoading)\r\n    if (!isLoading && !realTimeData.isLoading) {\r\n        var filteredData = getFilteredData(data,dataType);\r\n        let filteredRealTimeData = getFilteredData(realTimeData.data, dataType); // start from lastdate\r\n        if (filteredData.length != 0) {\r\n            var lastdate = filteredData[0][0]\r\n            console.log(filteredRealTimeData)\r\n            console.log(filteredData)\r\n            console.log(new Date(filteredData[0][0])) //1643155200000\r\n            console.log(new Date(filteredRealTimeData[filteredRealTimeData.length-1][0])) //1644004801000\r\n            \r\n            let dataLastDate = new Date(filteredData[0][0]);\r\n            let realDataLastDate = new Date(filteredRealTimeData[0][0]);\r\n            let realDataFirstDate = new Date(filteredRealTimeData[filteredRealTimeData.length-1][0])\r\n            if (dataLastDate.getDay() == realDataLastDate.getDay() || dataLastDate.getDay() == realDataFirstDate.getDay()) {\r\n                filteredRealTimeData = []\r\n                lastdate = undefined\r\n            }\r\n            filteredRealTimeData = removePast(filteredRealTimeData, lastdate);\r\n            \r\n            console.log(filteredRealTimeData)\r\n        }\r\n\r\n        if (dataType2) {\r\n            var filteredData2 = getFilteredData(data,dataType2);\r\n            console.log(filteredData2)\r\n            let filteredRealTimeData2 = getFilteredData(realTimeData.data,dataType2);\r\n            if (filteredData2.length != 0) {\r\n                lastdate = filteredData[0][0];\r\n                let dataLastDate = new Date(filteredData2[0][0]);\r\n                let realDataLastDate = new Date(filteredRealTimeData2[0][0]);\r\n                let realDataFirstDate = new Date(filteredRealTimeData2[filteredRealTimeData2.length-1][0])            \r\n                if (dataLastDate.getDay() == realDataLastDate.getDay() || dataLastDate.getDay() == realDataFirstDate.getDay()) {\r\n                    filteredRealTimeData2 = []\r\n                    lastdate = undefined\r\n                }\r\n                filteredRealTimeData2 = removePast(filteredRealTimeData2, lastdate);\r\n                \r\n                console.log(filteredRealTimeData2)\r\n                \r\n            }\r\n            // if (dataType2 == \"Wind_Dir\") {\r\n            //     var windbarbData = getWindbarbData(data);\r\n            //     let windbarbRealTimeData = getWindbarbData(realTimeData.data);\r\n            //     if (windbarbData.length != 0) {\r\n            //         windbarbRealTimeData = removePast(windbarbRealTimeData, lastdate);\r\n            //         if (Date(windbarbData[0][0]) == Date(windbarbRealTimeData[0][0])) {\r\n            //             windbarbRealTimeData = []\r\n            //             lastdate = undefined\r\n            //         }\r\n            //     }\r\n            //     if (windbarbRealTimeData == []) {\r\n            //         setChartOptions(()=>({\r\n            //             series: [\r\n            //                 {\r\n            //                     data: filteredData\r\n            //                 },\r\n            //                 {\r\n            //                     data: filteredRealTimeData\r\n            //                 },\r\n            //                 {\r\n            //                     data: windbarbData\r\n            //                 },\r\n            //                 {\r\n            //                     // data: windbarbRealTimeData\r\n            //                 },\r\n            //             ],\r\n            //         }))\r\n            //     } else {\r\n            //         setChartOptions(()=>({\r\n            //             series: [\r\n            //                 {\r\n            //                     data: filteredData\r\n            //                 },\r\n            //                 {\r\n            //                     data: filteredRealTimeData\r\n            //                 },\r\n            //                 {\r\n            //                     data: windbarbData\r\n            //                 },\r\n            //                 {\r\n            //                     data: windbarbRealTimeData\r\n            //                 },\r\n            //             ],\r\n            //             xAxis: {\r\n            //                 plotLines: [{\r\n            //                     color: '#FF0000',\r\n            //                     width: 5,\r\n            //                     value: lastdate\r\n            //                 }]\r\n            //             }\r\n            //         }))\r\n            //     }\r\n            // } else {\r\n                setChartOptions(()=> ({\r\n                    series: [\r\n                        {\r\n                            data: filteredData2\r\n                        },\r\n                        {\r\n                            data: filteredRealTimeData2\r\n                        },\r\n                        {\r\n                            data: filteredData\r\n                        },\r\n                        {\r\n                            data: filteredRealTimeData\r\n                        }\r\n                    ],\r\n                    xAxis: {\r\n                        plotLines: [{\r\n                            color: '#FF0000',\r\n                            width: 5,\r\n                            value: lastdate\r\n                        }]\r\n                    }\r\n                }))\r\n            // }\r\n        }\r\n        else {\r\n            console.log(\"here\")\r\n            setChartOptions(()=> ({\r\n                series: [\r\n                    {\r\n                        data: filteredData\r\n                    },\r\n                    {\r\n                        data: filteredRealTimeData\r\n                    }\r\n                ],\r\n                xAxis: {\r\n                    plotLines: [{\r\n                        color: '#FF0000',\r\n                        width: 5,\r\n                        value: lastdate\r\n                    }]\r\n                }\r\n            }))\r\n        }\r\n    }\r\n    \r\n  },[isLoading, realTimeData.isLoading])\r\n\r\n  return (\r\n    <div>\r\n        {isLoading && <p className='loading-info'>Fetching Data...</p>}\r\n        {realTimeData.isLoading && <p className='loading-info'>Fetching Data...</p>}\r\n        <HighchartsReact \r\n            highcharts={Highcharts}\r\n            ref={chartComponent}\r\n            allowChartUpdate={true}\r\n            options={chartOptions}  />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport MetChart from './MetChart.js';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DataDisclaimer from '../../DataDisclaimer.js';\r\nimport DateRangePicker from '../../DateRangePicker.js';\r\n\r\nexport default function Met(props) {\r\n    var MyAirTemp_RelHumChartProps = {\r\n        chart: {\r\n            zoomType: 'x',\r\n        },\r\n        time: {\r\n            useUTC: false\r\n        },\r\n        title: {\r\n            text: ''\r\n        },\r\n        xAxis: {\r\n            type: 'datetime'\r\n        },\r\n        yAxis: \r\n        [{ // Primary yAxis\r\n            labels: {\r\n                format: '{value}°C',\r\n                style: {\r\n                    color: Highcharts.getOptions().colors[3]\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Air Temperature [°C]',\r\n                style: {\r\n                    color: Highcharts.getOptions().colors[3]\r\n                }\r\n            },\r\n            opposite: true,\r\n            // height: '50%',\r\n            lineColor: Highcharts.getOptions().colors[3],\r\n            lineWidth: 5,\r\n            \r\n        }, { // Secondary yAxis\r\n            title: {\r\n                text: 'Relative Humidity [%]',\r\n                style: {\r\n                    color: Highcharts.getOptions().colors[0]\r\n                }\r\n            },\r\n            labels: {\r\n                format: '{value}%',\r\n                style: {\r\n                    color: Highcharts.getOptions().colors[0]\r\n                }\r\n            },\r\n            // height: '50%',\r\n            // top: '50%',\r\n            lineColor: Highcharts.getOptions().colors[0],\r\n            lineWidth: 5,\r\n            \r\n        }],\r\n        tooltip: {\r\n            formatter: function () {\r\n                // The first returned item is the header, subsequent items are the\r\n                // points\r\n                const DayOfMonth = new Date(this.x).getDate();\r\n                const Month = new Date(this.x).getMonth(); // Be careful! January is 0, not 1\r\n                const Year = new Date(this.x).getFullYear();\r\n                const TimeHrs = new Date(this.x).getHours();\r\n                const TimeMins = new Date(this.x).getMinutes();\r\n                const dateString = (Month + 1) + \"-\" + DayOfMonth + \"-\" + Year + \"  \" + TimeHrs + \":\" + TimeMins + ' PST';\r\n                return [dateString].concat(\r\n                    this.points ?\r\n                        this.points.map(function (point) {\r\n                            if (point.series.name  == 'Relative Humidity Clean' || point.series.name == 'Relative Humidity Live') {\r\n                                return point.series.name + ': ' + point.y +'%'\r\n                            }\r\n                            else {\r\n                                return point.series.name + ': ' + point.y +'°C';\r\n                            }\r\n                            \r\n                        }) : []\r\n                );\r\n            },\r\n            split: true\r\n        },\r\n\r\n        series: [\r\n            {\r\n                name: 'Air Temperature Clean',\r\n                data: [],\r\n                selected: true,\r\n                yAxis: 0,\r\n                color: Highcharts.getOptions().colors[3],\r\n                \r\n            }, \r\n            {\r\n                name: 'Air Temperature Live',\r\n                data: [],\r\n                selected: true,\r\n                yAxis: 0,\r\n                color: Highcharts.getOptions().colors[3],\r\n                dashStyle: 'dash',\r\n                \r\n            },\r\n            {\r\n                name: 'Relative Humidity Clean',\r\n                data: [],\r\n                selected: true,\r\n                yAxis: 1,\r\n                color: Highcharts.getOptions().colors[0],\r\n            },\r\n            {\r\n                name: 'Relative Humidity Live',\r\n                data: [],\r\n                selected: true,\r\n                yAxis: 1,\r\n                color: Highcharts.getOptions().colors[0],\r\n                dashStyle: 'dash',\r\n            },\r\n                \r\n        ],\r\n        updateTime: {\r\n            setTime: 0,\r\n            endTime: 0,\r\n        },\r\n    };\r\n    var MyAtmPressureChartProps = {\r\n        chart: {\r\n            zoomType: 'x'\r\n        },\r\n        time: {\r\n            useUTC: false\r\n        },\r\n        title: {\r\n            text: ''\r\n        },\r\n        xAxis: {\r\n            type: 'datetime'\r\n        },\r\n        yAxis: {\r\n            labels: {\r\n                format: '{value} kPa',\r\n                style: {\r\n                    color: Highcharts.getOptions().colors[4]\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Atmospheric Pressure [kPa]',\r\n                style: {\r\n                    color: Highcharts.getOptions().colors[4]\r\n                }\r\n            },\r\n            lineColor: Highcharts.getOptions().colors[4],\r\n            lineWidth: 5,\r\n        },\r\n    \r\n        series: [\r\n            {\r\n                name: 'Atmospheric Pressure Clean',\r\n                data: [],\r\n                selected: true,\r\n                color: Highcharts.getOptions().colors[4]\r\n            },\r\n            {\r\n                name: 'Atmospheric Pressure Live',\r\n                data: [],\r\n                selected: true,\r\n                dashStyle: 'dash',\r\n                color: Highcharts.getOptions().colors[4]\r\n            }\r\n        ],\r\n        tooltip: {\r\n            headerFormat: '<b>{series.name} {point.y} kPA</b><br>',\r\n            pointFormat: '{point.x:%m/%d/%y %H:%M:%S} PST'\r\n        },\r\n        updateTime: {\r\n            setTime: 0,\r\n            endTime: 0,\r\n        }\r\n    }\r\n    var MyWindSpeedDirChart = {\r\n                chart: {\r\n                    zoomType: 'x',\r\n                    // height: 700,\r\n                },\r\n                time : {\r\n                    useUTC:false\r\n                },\r\n                title: {\r\n                    text: ''\r\n                },\r\n                xAxis: {\r\n                    type: 'datetime',\r\n                    offset: 40\r\n                },\r\n                yAxis: \r\n                [{ \r\n                    title: {\r\n                        text: 'Wind Direction [degrees]',\r\n                        style: {\r\n                            color: Highcharts.getOptions().colors[3]\r\n                        }\r\n                    },\r\n                    // labels: {\r\n                    //     format: '{value}°',\r\n                    //     style: {\r\n                    //         color: Highcharts.getOptions().colors[3]\r\n                    //     }\r\n                    // },\r\n                    // labels: {\r\n                    tickPositions: [0, 90, 180, 270, 360],\r\n                    labels: {\r\n                        formatter: function() {\r\n                            var obj = {\r\n                                0: 'North',\r\n                                90: 'East',\r\n                                180: 'South',\r\n                                270: 'West',\r\n                                360: 'North'\r\n                            }\r\n                        return (obj[this.value])\r\n                        }\r\n                    },\r\n                    // height: '50%',\r\n                    // top: '50%',\r\n                    lineColor: Highcharts.getOptions().colors[3],\r\n                    lineWidth: 5,\r\n                    max: 360,\r\n                    tickInterval: 90\r\n                },\r\n                { \r\n                    labels: {\r\n                        format: '{value} m/s',\r\n                        style: {\r\n                            color: Highcharts.getOptions().colors[0]\r\n                        }\r\n                    },\r\n                    title: {\r\n                        text: 'Wind Speed [m/s]',\r\n                        style: {\r\n                            color: Highcharts.getOptions().colors[0]\r\n                        }\r\n                    },\r\n                    opposite: true,\r\n                    lineColor: Highcharts.getOptions().colors[0],\r\n                    lineWidth: 5,\r\n                    gridLineWidth: 0,\r\n                }, \r\n            ],\r\n                plotOptions: {\r\n                    scatter: {\r\n                        marker: {\r\n                            radius: 5,\r\n                            states: {\r\n                                hover: {\r\n                                    enabled: true,\r\n                                    lineColor: 'rgb(100,100,100)'\r\n                                }\r\n                            }\r\n                        },\r\n                        states: {\r\n                            hover: {\r\n                                marker: {\r\n                                    enabled: false\r\n                                }\r\n                            }\r\n                        },\r\n                        tooltip: {\r\n                            headerFormat: '<b>{series.name} {point.y}°</b><br>',\r\n                            pointFormat: '{point.x:%m/%d/%y %H:%M:%S}'\r\n                        }\r\n                    },\r\n                    line: {\r\n                        tooltip: {\r\n                            headerFormat: '<b>{series.name} {point.y} m/s</b><br>',\r\n                            pointFormat: '{point.x:%m/%d/%y %H:%M:%S}'\r\n                            // pointFormat: '',\r\n                            // footerFormat: '{point.x:%m/%d/%y %H:%M:%S}<br>'\r\n                        }\r\n                    },\r\n                },\r\n                // tooltip: {\r\n                //     shared: true,\r\n                // },\r\n                series: [\r\n                    {\r\n                        name: 'Wind Direction Clean',\r\n                        selected: true,\r\n                        yAxis: 0,\r\n                        color: Highcharts.getOptions().colors[1],\r\n                        type: 'scatter',\r\n                        // type: 'windbarb',\r\n                        // keys: ['x', 'value', 'direction'],\r\n                        // data: [],\r\n                        // tooltip: {\r\n                        //     pointFormatter: function() {\r\n                        //         return \"<b>Wind Direction \" + this.direction + \"°</b><br>\"\r\n                        //     }\r\n                        // },\r\n                        // zoneAxis: 'x',\r\n                    },\r\n                    {\r\n                        name: 'Wind Direction Live',\r\n                        selected: true,\r\n                        yAxis: 0,\r\n                        color: Highcharts.getOptions().colors[3],\r\n                        type: 'scatter',\r\n                        // dashStyle: 'dash',\r\n                        // type: 'windbarb',\r\n                        // keys: ['x', 'value', 'direction'],\r\n                        // data: [],\r\n                        // tooltip: {\r\n                        //     pointFormatter: function() {\r\n                        //         return \"<b>Wind Direction \" + this.direction + \"°</b><br>\"\r\n                        //     }\r\n                        // }\r\n                    },\r\n                    {\r\n                        name: 'Wind Speed Clean',\r\n                        data: [],\r\n                        selected: true,\r\n                        yAxis: 1,\r\n                        color: Highcharts.getOptions().colors[0],\r\n                        type: 'line',\r\n                        // zoneAxis: 'x',\r\n                        \r\n                    },\r\n                    {\r\n                        name: 'Wind Speed Live',\r\n                        data: [],\r\n                        selected: true,\r\n                        yAxis: 1,\r\n                        color: Highcharts.getOptions().colors[0],\r\n                        dashStyle: 'dash',\r\n                    },\r\n                    \r\n                    \r\n                ],\r\n                updateTime: {\r\n                    setTime: 0,\r\n                    endTime: 0,\r\n                },\r\n\r\n    }\r\n    var solarRadiationChartProps = {\r\n        chart: {\r\n            zoomType: 'x'\r\n        },\r\n        time: {\r\n            useUTC: false\r\n        },\r\n        title: {\r\n            text: ''\r\n        },\r\n        xAxis: {\r\n            type: 'datetime'\r\n        },\r\n        yAxis: {\r\n            labels: {\r\n                format: '{value}',\r\n                style: {\r\n                    color: Highcharts.getOptions().colors[4]\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Solar [W/m2]',\r\n                style: {\r\n                    color: Highcharts.getOptions().colors[4]\r\n                }\r\n            },\r\n            lineColor: Highcharts.getOptions().colors[4],\r\n            lineWidth: 5,\r\n        },\r\n    \r\n        series: [\r\n            {\r\n                name: 'Solar Radiation Clean',\r\n                data: [],\r\n                selected: true,\r\n                color: Highcharts.getOptions().colors[4]\r\n            },\r\n            {\r\n                name: 'Solar Radiation Live',\r\n                data: [],\r\n                selected: true,\r\n                dashStyle: 'dash',\r\n                color: Highcharts.getOptions().colors[4]\r\n            }\r\n        ],\r\n        tooltip: {\r\n            headerFormat: '<b>{series.name} {point.y} W/m2</b><br>',\r\n            pointFormat: '{point.x:%m/%d/%y %H:%M:%S} PST'\r\n        },\r\n        updateTime: {\r\n            setTime: 0,\r\n            endTime: 0,\r\n        }\r\n    }\r\n    var today = new Date();\r\n    console.log(today);\r\n    var lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate()-7);\r\n    console.log(lastWeek);\r\n    const [startDate, setStartDate] = useState(lastWeek);\r\n    const [endDate, setEndDate] = useState(today);\r\n    const [startGraphDate, setGraphStartDate] = useState(lastWeek);\r\n    const [endGraphDate, setGraphEndDate] = useState(today);\r\n    function handleStartDateChange(e) {\r\n        setStartDate(e);\r\n    }\r\n    function handleEndDateChange(e) {\r\n        setEndDate(e);\r\n    }\r\n    function setGraphDates() {\r\n        setGraphStartDate(startDate);\r\n        setGraphEndDate(endDate);\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='station-page-header'>\r\n                <h1 className='station-page-title'>{props.name}</h1>\r\n            </div>\r\n            <DataDisclaimer/>\r\n            <div className='data-desc-container'>\r\n                <p className='data-desc'>Select start and end dates (maximum 150 day period). <br/>\r\n                    Click submit to update the graphs below.<br/>\r\n                    Allow some time for the data to be fetched. The longer the selected time period, the longer it will take to load.<br/>\r\n                    Use the hamburger icon on the top right of each graph to download the data displayed in the graph.<br/>\r\n                    Click and drag in the plot area to zoom in.<br/>\r\n                    Solid line means data comes from database with cleaned data, while dashed line means data is real time.\r\n                </p>\r\n            </div>\r\n            <DateRangePicker \r\n                startDate={startDate} \r\n                endDate={endDate} \r\n                handleStartDateChange={handleStartDateChange}\r\n                handleEndDateChange={handleEndDateChange}\r\n                setGraphDates={setGraphDates} \r\n                maxDays={150}/>\r\n            <MetChart \r\n                fromDate={startGraphDate} \r\n                endDate={endGraphDate} \r\n                id={props.id}\r\n                dataType={\"Rel_Humidity\"}\r\n                dataType2={\"Air_Temp\"}\r\n                chartProps={MyAirTemp_RelHumChartProps}\r\n             />\r\n            <MetChart \r\n                fromDate={startGraphDate} \r\n                endDate={endGraphDate} \r\n                id={props.id}\r\n                dataType={\"Atm_Pres\"}\r\n                chartProps={MyAtmPressureChartProps}\r\n             />\r\n            <MetChart \r\n                fromDate={startGraphDate} \r\n                endDate={endGraphDate} \r\n                id={props.id}\r\n                dataType={\"Wind_Speed\"}\r\n                dataType2={\"Wind_Dir\"}\r\n                chartProps={MyWindSpeedDirChart}\r\n             />\r\n            <MetChart \r\n                fromDate={startDate} \r\n                endDate={endDate} \r\n                id={props.id}\r\n                dataType={\"Solar_Rad\"}\r\n                chartProps={solarRadiationChartProps}\r\n             />\r\n        </div>\r\n        \r\n    )\r\n}","export function convertDate(date) {\r\n    let year = date.getFullYear().toString();\r\n    let month = (date.getMonth()+1).toString();\r\n    let day = date.getDate().toString();\r\n    if (month.length < 2) {\r\n        month = '0' + month;\r\n    }\r\n    if (day.length < 2) {\r\n        day = '0' + day;\r\n    }\r\n    return year+month+day;\r\n}\r\n\r\nexport function subDays(date, num) {\r\n    return new Date(new Date().setDate(date.getDate() - num));\r\n}\r\n\r\nexport function addDays(date, num, compareDate) {\r\n    let x = new Date(new Date().setDate(date.getDate() + num));\r\n    if (compareDate < x) {\r\n        return compareDate\r\n    } else {\r\n        return x\r\n    }\r\n}","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HighchartsReact\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"HighchartsReact\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 866101db6e6d9c90b880","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"HighchartsReact\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"HighchartsReact\"] = factory(root[\"React\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n // React currently throws a warning when using `useLayoutEffect` on the server.\n// To get around it, we can conditionally `useEffect` on the server (no-op) and\n// `useLayoutEffect` in the browser. We need `useLayoutEffect` to ensure the\n// `Highcharts` ref is available in the layout phase. This makes it available\n// in a parent component's `componentDidMount`.\n\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' ? __WEBPACK_IMPORTED_MODULE_0_react__[\"useLayoutEffect\"] : __WEBPACK_IMPORTED_MODULE_0_react__[\"useEffect\"];\nvar HighchartsReact = /*#__PURE__*/Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"forwardRef\"])(function HighchartsReact(props, ref) {\n  var containerRef = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useRef\"])();\n  var chartRef = Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useRef\"])();\n  useIsomorphicLayoutEffect(function () {\n    function createChart() {\n      var H = props.highcharts || (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === 'object' && window.Highcharts;\n      var constructorType = props.constructorType || 'chart';\n\n      if (!H) {\n        console.warn('The \"highcharts\" property was not passed.');\n      } else if (!H[constructorType]) {\n        console.warn('The \"constructorType\" property is incorrect or some ' + 'required module is not imported.');\n      } else if (!props.options) {\n        console.warn('The \"options\" property was not passed.');\n      } else {\n        // Create a chart\n        chartRef.current = H[constructorType](containerRef.current, props.options, props.callback ? props.callback : undefined);\n      }\n    }\n\n    if (!chartRef.current) {\n      createChart();\n    } else {\n      if (props.allowChartUpdate !== false) {\n        if (!props.immutable && chartRef.current) {\n          var _chartRef$current;\n\n          (_chartRef$current = chartRef.current).update.apply(_chartRef$current, [props.options].concat(_toConsumableArray(props.updateArgs || [true, true])));\n        } else {\n          createChart();\n        }\n      }\n    }\n  });\n  useIsomorphicLayoutEffect(function () {\n    return function () {\n      // Destroy chart only if unmounting.\n      if (chartRef.current) {\n        chartRef.current.destroy();\n        chartRef.current = null;\n      }\n    };\n  }, []);\n  Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"useImperativeHandle\"])(ref, function () {\n    return {\n      get chart() {\n        return chartRef.current;\n      },\n\n      container: containerRef\n    };\n  }, []); // Create container for the chart\n\n  return /*#__PURE__*/__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(\"div\", _extends({}, props.containerProps, {\n    ref: containerRef\n  }));\n});\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(__WEBPACK_IMPORTED_MODULE_0_react__[\"memo\"])(HighchartsReact));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// highcharts-react.min.js","import React, {\n  forwardRef,\n  memo,\n  useEffect,\n  useImperativeHandle,\n  useLayoutEffect,\n  useRef\n} from 'react';\n\n// React currently throws a warning when using `useLayoutEffect` on the server.\n// To get around it, we can conditionally `useEffect` on the server (no-op) and\n// `useLayoutEffect` in the browser. We need `useLayoutEffect` to ensure the\n// `Highcharts` ref is available in the layout phase. This makes it available\n// in a parent component's `componentDidMount`.\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nconst HighchartsReact = forwardRef(\n  function HighchartsReact(props, ref) {\n    const containerRef = useRef();\n    const chartRef = useRef();\n\n    useIsomorphicLayoutEffect(() => {\n      function createChart() {\n        const H = props.highcharts || (\n          typeof window === 'object' && window.Highcharts\n        );\n        const constructorType = props.constructorType || 'chart';\n\n        if (!H) {\n          console.warn('The \"highcharts\" property was not passed.');\n\n        } else if (!H[constructorType]) {\n          console.warn(\n            'The \"constructorType\" property is incorrect or some ' +\n              'required module is not imported.'\n          );\n        } else if (!props.options) {\n          console.warn('The \"options\" property was not passed.');\n\n        } else {\n          // Create a chart\n          chartRef.current = H[constructorType](\n            containerRef.current,\n            props.options,\n            props.callback ? props.callback : undefined\n          );\n        }\n      }\n\n      if (!chartRef.current) {\n        createChart();\n      } else {\n        if (props.allowChartUpdate !== false) {\n          if (!props.immutable && chartRef.current) {\n            chartRef.current.update(\n              props.options,\n              ...(props.updateArgs || [true, true])\n            );\n          } else {\n            createChart();\n          }\n        }\n      }\n    });\n\n    useIsomorphicLayoutEffect(() => {\n      return () => {\n        // Destroy chart only if unmounting.\n        if (chartRef.current) {\n          chartRef.current.destroy();\n          chartRef.current = null;\n        }\n      };\n    }, []);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        get chart() {\n          return chartRef.current;\n        },\n        container: containerRef\n      }),\n      []\n    );\n\n    // Create container for the chart\n    return <div { ...props.containerProps } ref={ containerRef } />;\n  }\n);\n\nexport default memo(HighchartsReact);\n\n\n\n// WEBPACK FOOTER //\n// ./src/HighchartsReact.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}\n// module id = 1\n// module chunks = 0 1","/**\n * @license Highcharts JS v9.3.3 (2022-02-01)\n *\n * Wind barb series module\n *\n * (c) 2010-2021 Torstein Honsi\n *\n * License: www.highcharts.com/license\n */\n'use strict';\n(function (factory) {\n    if (typeof module === 'object' && module.exports) {\n        factory['default'] = factory;\n        module.exports = factory;\n    } else if (typeof define === 'function' && define.amd) {\n        define('highcharts/modules/windbarb', ['highcharts'], function (Highcharts) {\n            factory(Highcharts);\n            factory.Highcharts = Highcharts;\n            return factory;\n        });\n    } else {\n        factory(typeof Highcharts !== 'undefined' ? Highcharts : undefined);\n    }\n}(function (Highcharts) {\n    var _modules = Highcharts ? Highcharts._modules : {};\n    function _registerModule(obj, path, args, fn) {\n        if (!obj.hasOwnProperty(path)) {\n            obj[path] = fn.apply(null, args);\n        }\n    }\n    _registerModule(_modules, 'Series/OnSeriesComposition.js', [_modules['Series/Column/ColumnSeries.js'], _modules['Core/Series/Series.js'], _modules['Core/Utilities.js']], function (ColumnSeries, Series, U) {\n        /* *\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var columnProto = ColumnSeries.prototype;\n        var seriesProto = Series.prototype;\n        var defined = U.defined,\n            stableSort = U.stableSort;\n        /* *\n         *\n         *  Composition\n         *\n         * */\n        var OnSeriesComposition;\n        (function (OnSeriesComposition) {\n            /* *\n             *\n             *  Declarations\n             *\n             * */\n            /* *\n             *\n             *  Properties\n             *\n             * */\n            var composedClasses = [];\n            /* *\n             *\n             *  Functions\n             *\n             * */\n            /* eslint-disable valid-jsdoc */\n            /**\n             * @private\n             */\n            function compose(SeriesClass) {\n                if (composedClasses.indexOf(SeriesClass) === -1) {\n                    composedClasses.push(SeriesClass);\n                    var seriesProto_1 = SeriesClass.prototype;\n                    seriesProto_1.getPlotBox = getPlotBox;\n                    seriesProto_1.translate = translate;\n                }\n                return SeriesClass;\n            }\n            OnSeriesComposition.compose = compose;\n            /**\n             * Override getPlotBox. If the onSeries option is valid, return the plot box\n             * of the onSeries, otherwise proceed as usual.\n             *\n             * @private\n             */\n            function getPlotBox() {\n                return seriesProto.getPlotBox.call((this.options.onSeries &&\n                    this.chart.get(this.options.onSeries)) || this);\n            }\n            OnSeriesComposition.getPlotBox = getPlotBox;\n            /**\n             * Extend the translate method by placing the point on the related series\n             *\n             * @private\n             */\n            function translate() {\n                columnProto.translate.apply(this);\n                var series = this,\n                    options = series.options,\n                    chart = series.chart,\n                    points = series.points,\n                    optionsOnSeries = options.onSeries,\n                    onSeries = (optionsOnSeries &&\n                        chart.get(optionsOnSeries)),\n                    step = onSeries && onSeries.options.step,\n                    onData = (onSeries && onSeries.points),\n                    inverted = chart.inverted,\n                    xAxis = series.xAxis,\n                    yAxis = series.yAxis;\n                var cursor = points.length - 1,\n                    point,\n                    lastPoint,\n                    onKey = options.onKey || 'y',\n                    i = onData && onData.length,\n                    xOffset = 0,\n                    leftPoint,\n                    lastX,\n                    rightPoint,\n                    currentDataGrouping,\n                    distanceRatio;\n                // relate to a master series\n                if (onSeries && onSeries.visible && i) {\n                    xOffset = (onSeries.pointXOffset || 0) + (onSeries.barW || 0) / 2;\n                    currentDataGrouping = onSeries.currentDataGrouping;\n                    lastX = (onData[i - 1].x +\n                        (currentDataGrouping ? currentDataGrouping.totalRange : 0)); // #2374\n                    // sort the data points\n                    stableSort(points, function (a, b) { return (a.x - b.x); });\n                    onKey = 'plot' + onKey[0].toUpperCase() + onKey.substr(1);\n                    while (i-- && points[cursor]) {\n                        leftPoint = onData[i];\n                        point = points[cursor];\n                        point.y = leftPoint.y;\n                        if (leftPoint.x <= point.x &&\n                            typeof leftPoint[onKey] !== 'undefined') {\n                            if (point.x <= lastX) { // #803\n                                point.plotY = leftPoint[onKey];\n                                // interpolate between points, #666\n                                if (leftPoint.x < point.x &&\n                                    !step) {\n                                    rightPoint = onData[i + 1];\n                                    if (rightPoint &&\n                                        typeof rightPoint[onKey] !== 'undefined') {\n                                        // the distance ratio, between 0 and 1\n                                        distanceRatio =\n                                            (point.x - leftPoint.x) /\n                                                (rightPoint.x - leftPoint.x);\n                                        point.plotY +=\n                                            distanceRatio *\n                                                // the plotY distance\n                                                (rightPoint[onKey] - leftPoint[onKey]);\n                                        point.y +=\n                                            distanceRatio *\n                                                (rightPoint.y - leftPoint.y);\n                                    }\n                                }\n                            }\n                            cursor--;\n                            i++; // check again for points in the same x position\n                            if (cursor < 0) {\n                                break;\n                            }\n                        }\n                    }\n                }\n                // Add plotY position and handle stacking\n                points.forEach(function (point, i) {\n                    var stackIndex;\n                    point.plotX += xOffset; // #2049\n                    // Undefined plotY means the point is either on axis, outside series\n                    // range or hidden series. If the series is outside the range of the\n                    // x axis it should fall through with an undefined plotY, but then\n                    // we must remove the shapeArgs (#847). For inverted charts, we need\n                    // to calculate position anyway, because series.invertGroups is not\n                    // defined\n                    if (typeof point.plotY === 'undefined' || inverted) {\n                        if (point.plotX >= 0 &&\n                            point.plotX <= xAxis.len) {\n                            // We're inside xAxis range\n                            if (inverted) {\n                                point.plotY = xAxis.translate(point.x, 0, 1, 0, 1);\n                                point.plotX = defined(point.y) ?\n                                    yAxis.translate(point.y, 0, 0, 0, 1) :\n                                    0;\n                            }\n                            else {\n                                point.plotY = (xAxis.opposite ? 0 : series.yAxis.len) +\n                                    xAxis.offset; // For the windbarb demo\n                            }\n                        }\n                        else {\n                            point.shapeArgs = {}; // 847\n                        }\n                    }\n                    // if multiple flags appear at the same x, order them into a stack\n                    lastPoint = points[i - 1];\n                    if (lastPoint && lastPoint.plotX === point.plotX) {\n                        if (typeof lastPoint.stackIndex === 'undefined') {\n                            lastPoint.stackIndex = 0;\n                        }\n                        stackIndex = lastPoint.stackIndex + 1;\n                    }\n                    point.stackIndex = stackIndex; // #3639\n                });\n                this.onSeries = onSeries;\n            }\n            OnSeriesComposition.translate = translate;\n        })(OnSeriesComposition || (OnSeriesComposition = {}));\n        /* *\n         *\n         *  Default Export\n         *\n         * */\n\n        return OnSeriesComposition;\n    });\n    _registerModule(_modules, 'Series/Windbarb/WindbarbPoint.js', [_modules['Core/Utilities.js'], _modules['Series/Column/ColumnSeries.js']], function (U, ColumnSeries) {\n        /* *\n         *\n         *  Wind barb series module\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var isNumber = U.isNumber;\n        /* *\n         *\n         * Class\n         *\n         * */\n        var WindbarbPoint = /** @class */ (function (_super) {\n                __extends(WindbarbPoint, _super);\n            function WindbarbPoint() {\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                /* *\n                 *\n                 * Properties\n                 *\n                 * */\n                _this.beaufort = void 0;\n                _this.beaufortLevel = void 0;\n                _this.direction = void 0;\n                _this.options = void 0;\n                _this.series = void 0;\n                return _this;\n            }\n            /* *\n             *\n             * Functions\n             *\n             * */\n            WindbarbPoint.prototype.isValid = function () {\n                return isNumber(this.value) && this.value >= 0;\n            };\n            return WindbarbPoint;\n        }(ColumnSeries.prototype.pointClass));\n        /* *\n         *\n         * Default export\n         *\n         * */\n\n        return WindbarbPoint;\n    });\n    _registerModule(_modules, 'Series/Windbarb/WindbarbSeries.js', [_modules['Core/Animation/AnimationUtilities.js'], _modules['Core/Globals.js'], _modules['Series/OnSeriesComposition.js'], _modules['Core/Series/SeriesRegistry.js'], _modules['Core/Utilities.js'], _modules['Series/Windbarb/WindbarbPoint.js']], function (A, H, OnSeriesComposition, SeriesRegistry, U, WindbarbPoint) {\n        /* *\n         *\n         *  Wind barb series module\n         *\n         *  (c) 2010-2021 Torstein Honsi\n         *\n         *  License: www.highcharts.com/license\n         *\n         *  !!!!!!! SOURCE GETS TRANSPILED BY TYPESCRIPT. EDIT TS FILE ONLY. !!!!!!!\n         *\n         * */\n        var __extends = (this && this.__extends) || (function () {\n                var extendStatics = function (d,\n            b) {\n                    extendStatics = Object.setPrototypeOf ||\n                        ({ __proto__: [] } instanceof Array && function (d,\n            b) { d.__proto__ = b; }) ||\n                        function (d,\n            b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n                return extendStatics(d, b);\n            };\n            return function (d, b) {\n                extendStatics(d, b);\n                function __() { this.constructor = d; }\n                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n            };\n        })();\n        var animObject = A.animObject;\n        var noop = H.noop;\n        var Series = SeriesRegistry.series,\n            ColumnSeries = SeriesRegistry.seriesTypes.column;\n        var extend = U.extend,\n            merge = U.merge,\n            pick = U.pick;\n        /**\n         * @private\n         * @class\n         * @name Highcharts.seriesTypes.windbarb\n         *\n         * @augments Highcharts.Series\n         */\n        var WindbarbSeries = /** @class */ (function (_super) {\n                __extends(WindbarbSeries, _super);\n            function WindbarbSeries() {\n                /* *\n                 *\n                 * Static properties\n                 *\n                 * */\n                var _this = _super !== null && _super.apply(this,\n                    arguments) || this;\n                /* *\n                 *\n                 * Properties\n                 *\n                 * */\n                _this.data = void 0;\n                _this.options = void 0;\n                _this.points = void 0;\n                return _this;\n            }\n            /* *\n             *\n             * Static functions\n             *\n             * */\n            // eslint-disable-next-line valid-jsdoc\n            /**\n             * Once off, register the windbarb approximation for data grouping. This can\n             * be called anywhere (not necessarily in the translate function), but must\n             * happen after the data grouping module is loaded and before the\n             * wind barb series uses it.\n             * @private\n             */\n            WindbarbSeries.registerApproximation = function () {\n                if (H.approximations && !H.approximations.windbarb) {\n                    H.approximations.windbarb = function (values, directions) {\n                        var vectorX = 0,\n                            vectorY = 0,\n                            i,\n                            len = values.length;\n                        for (i = 0; i < len; i++) {\n                            vectorX += values[i] * Math.cos(directions[i] * H.deg2rad);\n                            vectorY += values[i] * Math.sin(directions[i] * H.deg2rad);\n                        }\n                        return [\n                            // Wind speed\n                            values.reduce(function (sum, value) {\n                                return sum + value;\n                            }, 0) / values.length,\n                            // Wind direction\n                            Math.atan2(vectorY, vectorX) / H.deg2rad\n                        ];\n                    };\n                }\n            };\n            /* *\n             *\n             * Functions\n             *\n             * */\n            WindbarbSeries.prototype.init = function (chart, options) {\n                WindbarbSeries.registerApproximation();\n                Series.prototype.init.call(this, chart, options);\n            };\n            // Get presentational attributes.\n            WindbarbSeries.prototype.pointAttribs = function (point, state) {\n                var options = this.options,\n                    stroke = point.color || this.color,\n                    strokeWidth = this.options.lineWidth;\n                if (state) {\n                    stroke = options.states[state].color || stroke;\n                    strokeWidth =\n                        (options.states[state].lineWidth || strokeWidth) +\n                            (options.states[state].lineWidthPlus || 0);\n                }\n                return {\n                    'stroke': stroke,\n                    'stroke-width': strokeWidth\n                };\n            };\n            // Create a single wind arrow. It is later rotated around the zero\n            // centerpoint.\n            WindbarbSeries.prototype.windArrow = function (point) {\n                var knots = point.value * 1.943844,\n                    level = point.beaufortLevel,\n                    path,\n                    barbs,\n                    u = this.options.vectorLength / 20,\n                    pos = -10;\n                if (point.isNull) {\n                    return [];\n                }\n                if (level === 0) {\n                    return this.chart.renderer.symbols.circle(-10 * u, -10 * u, 20 * u, 20 * u);\n                }\n                // The stem and the arrow head\n                path = [\n                    ['M', 0, 7 * u],\n                    ['L', -1.5 * u, 7 * u],\n                    ['L', 0, 10 * u],\n                    ['L', 1.5 * u, 7 * u],\n                    ['L', 0, 7 * u],\n                    ['L', 0, -10 * u] // top\n                ];\n                // For each full 50 knots, add a pennant\n                barbs = (knots - knots % 50) / 50; // pennants\n                if (barbs > 0) {\n                    while (barbs--) {\n                        path.push(pos === -10 ? ['L', 0, pos * u] : ['M', 0, pos * u], ['L', 5 * u, pos * u + 2], ['L', 0, pos * u + 4]);\n                        // Substract from the rest and move position for next\n                        knots -= 50;\n                        pos += 7;\n                    }\n                }\n                // For each full 10 knots, add a full barb\n                barbs = (knots - knots % 10) / 10;\n                if (barbs > 0) {\n                    while (barbs--) {\n                        path.push(pos === -10 ? ['L', 0, pos * u] : ['M', 0, pos * u], ['L', 7 * u, pos * u]);\n                        knots -= 10;\n                        pos += 3;\n                    }\n                }\n                // For each full 5 knots, add a half barb\n                barbs = (knots - knots % 5) / 5; // half barbs\n                if (barbs > 0) {\n                    while (barbs--) {\n                        path.push(pos === -10 ? ['L', 0, pos * u] : ['M', 0, pos * u], ['L', 4 * u, pos * u]);\n                        knots -= 5;\n                        pos += 3;\n                    }\n                }\n                return path;\n            };\n            WindbarbSeries.prototype.drawPoints = function () {\n                var chart = this.chart,\n                    yAxis = this.yAxis,\n                    inverted = chart.inverted,\n                    shapeOffset = this.options.vectorLength / 2;\n                this.points.forEach(function (point) {\n                    var plotX = point.plotX,\n                        plotY = point.plotY;\n                    // Check if it's inside the plot area, but only for the X\n                    // dimension.\n                    if (this.options.clip === false ||\n                        chart.isInsidePlot(plotX, 0)) {\n                        // Create the graphic the first time\n                        if (!point.graphic) {\n                            point.graphic = this.chart.renderer\n                                .path()\n                                .add(this.markerGroup)\n                                .addClass('highcharts-point ' +\n                                'highcharts-color-' +\n                                pick(point.colorIndex, point.series.colorIndex));\n                        }\n                        // Position the graphic\n                        point.graphic\n                            .attr({\n                            d: this.windArrow(point),\n                            translateX: plotX + this.options.xOffset,\n                            translateY: plotY + this.options.yOffset,\n                            rotation: point.direction\n                        });\n                        if (!this.chart.styledMode) {\n                            point.graphic\n                                .attr(this.pointAttribs(point));\n                        }\n                    }\n                    else if (point.graphic) {\n                        point.graphic = point.graphic.destroy();\n                    }\n                    // Set the tooltip anchor position\n                    point.tooltipPos = [\n                        plotX + this.options.xOffset +\n                            (inverted && !this.onSeries ? shapeOffset : 0),\n                        plotY + this.options.yOffset -\n                            (inverted ?\n                                0 :\n                                shapeOffset + yAxis.pos - chart.plotTop)\n                    ]; // #6327\n                }, this);\n            };\n            // Fade in the arrows on initializing series.\n            WindbarbSeries.prototype.animate = function (init) {\n                if (init) {\n                    this.markerGroup.attr({\n                        opacity: 0.01\n                    });\n                }\n                else {\n                    this.markerGroup.animate({\n                        opacity: 1\n                    }, animObject(this.options.animation));\n                }\n            };\n            WindbarbSeries.prototype.markerAttribs = function (point, state) {\n                return {};\n            };\n            WindbarbSeries.prototype.getExtremes = function () {\n                return {};\n            };\n            WindbarbSeries.prototype.shouldShowTooltip = function (plotX, plotY, options) {\n                if (options === void 0) { options = {}; }\n                options.ignoreX = this.chart.inverted;\n                options.ignoreY = !options.ignoreX;\n                return _super.prototype.shouldShowTooltip.call(this, plotX, plotY, options);\n            };\n            /**\n             * Wind barbs are a convenient way to represent wind speed and direction in\n             * one graphical form. Wind direction is given by the stem direction, and\n             * wind speed by the number and shape of barbs.\n             *\n             * @sample {highcharts|highstock} highcharts/demo/windbarb-series/\n             *         Wind barb series\n             *\n             * @extends      plotOptions.column\n             * @excluding    boostThreshold, marker, connectEnds, connectNulls,\n             *               cropThreshold, dashStyle, dragDrop, gapSize, gapUnit,\n             *               linecap, shadow, stacking, step, boostBlending\n             * @since        6.0.0\n             * @product      highcharts highstock\n             * @requires     modules/windbarb\n             * @optionparent plotOptions.windbarb\n             */\n            WindbarbSeries.defaultOptions = merge(ColumnSeries.defaultOptions, {\n                /**\n                 * Data grouping options for the wind barbs. In Highcharts, this\n                 * requires the `modules/datagrouping.js` module to be loaded. In\n                 * Highcharts Stock, data grouping is included.\n                 *\n                 * @sample  highcharts/plotoptions/windbarb-datagrouping\n                 *          Wind barb with data grouping\n                 *\n                 * @since   7.1.0\n                 * @product highcharts highstock\n                 */\n                dataGrouping: {\n                    /**\n                     * Whether to enable data grouping.\n                     *\n                     * @product highcharts highstock\n                     */\n                    enabled: true,\n                    /**\n                     * Approximation function for the data grouping. The default\n                     * returns an average of wind speed and a vector average direction\n                     * weighted by wind speed.\n                     *\n                     * @product highcharts highstock\n                     *\n                     * @type {string|Function}\n                     */\n                    approximation: 'windbarb',\n                    /**\n                     * The approximate data group width.\n                     *\n                     * @product highcharts highstock\n                     */\n                    groupPixelWidth: 30\n                },\n                /**\n                 * The line width of the wind barb symbols.\n                 */\n                lineWidth: 2,\n                /**\n                 * The id of another series in the chart that the wind barbs are\n                 * projected on. When `null`, the wind symbols are drawn on the X axis,\n                 * but offset up or down by the `yOffset` setting.\n                 *\n                 * @sample {highcharts|highstock} highcharts/plotoptions/windbarb-onseries\n                 *         Projected on area series\n                 *\n                 * @type {string|null}\n                 */\n                onSeries: null,\n                states: {\n                    hover: {\n                        lineWidthPlus: 0\n                    }\n                },\n                tooltip: {\n                    /**\n                     * The default point format for the wind barb tooltip. Note the\n                     * `point.beaufort` property that refers to the Beaufort wind scale.\n                     * The names can be internationalized by modifying\n                     * `Highcharts.seriesTypes.windbarb.prototype.beaufortNames`.\n                     */\n                    pointFormat: '<span style=\"color:{point.color}\">\\u25CF</span> {series.name}: <b>{point.value}</b> ({point.beaufort})<br/>'\n                },\n                /**\n                 * Pixel length of the stems.\n                 */\n                vectorLength: 20,\n                /**\n                 * @default   value\n                 */\n                colorKey: 'value',\n                /**\n                 * Vertical offset from the cartesian position, in pixels. The default\n                 * value makes sure the symbols don't overlap the X axis when `onSeries`\n                 * is `null`, and that they don't overlap the linked series when\n                 * `onSeries` is given.\n                 */\n                yOffset: -20,\n                /**\n                 * Horizontal offset from the cartesian position, in pixels. When the\n                 * chart is inverted, this option allows translation like\n                 * [yOffset](#plotOptions.windbarb.yOffset) in non inverted charts.\n                 *\n                 * @since 6.1.0\n                 */\n                xOffset: 0\n            });\n            return WindbarbSeries;\n        }(ColumnSeries));\n        OnSeriesComposition.compose(WindbarbSeries);\n        extend(WindbarbSeries.prototype, {\n            beaufortFloor: [0, 0.3, 1.6, 3.4, 5.5, 8.0, 10.8, 13.9, 17.2, 20.8,\n                24.5, 28.5, 32.7],\n            beaufortName: ['Calm', 'Light air', 'Light breeze',\n                'Gentle breeze', 'Moderate breeze', 'Fresh breeze',\n                'Strong breeze', 'Near gale', 'Gale', 'Strong gale', 'Storm',\n                'Violent storm', 'Hurricane'],\n            parallelArrays: ['x', 'value', 'direction'],\n            pointArrayMap: ['value', 'direction'],\n            pointClass: WindbarbPoint,\n            trackerGroups: ['markerGroup'],\n            invertGroups: noop,\n            translate: function () {\n                var beaufortFloor = this.beaufortFloor,\n                    beaufortName = this.beaufortName;\n                OnSeriesComposition.translate.call(this);\n                this.points.forEach(function (point) {\n                    var level = 0;\n                    // Find the beaufort level (zero based)\n                    for (; level < beaufortFloor.length; level++) {\n                        if (beaufortFloor[level] > point.value) {\n                            break;\n                        }\n                    }\n                    point.beaufortLevel = level - 1;\n                    point.beaufort = beaufortName[level - 1];\n                });\n            }\n        });\n        /* *\n         *\n         * Registry\n         *\n         * */\n        WindbarbSeries.registerApproximation();\n        SeriesRegistry.registerSeriesType('windbarb', WindbarbSeries);\n        /* *\n         *\n         * Export default\n         *\n         * */\n        /* *\n         *\n         * API Options\n         *\n         * */\n        /**\n         * A `windbarb` series. If the [type](#series.windbarb.type) option is not\n         * specified, it is inherited from [chart.type](#chart.type).\n         *\n         * @extends   series,plotOptions.windbarb\n         * @excluding dataParser, dataURL, boostThreshold, boostBlending\n         * @product   highcharts highstock\n         * @requires  modules/windbarb\n         * @apioption series.windbarb\n         */\n        /**\n         * An array of data points for the series. For the `windbarb` series type,\n         * points can be given in the following ways:\n         *\n         * 1. An array of arrays with 3 values. In this case, the values correspond to\n         *    `x,value,direction`. If the first value is a string, it is applied as the\n         *    name of the point, and the `x` value is inferred.\n         *    ```js\n         *       data: [\n         *           [Date.UTC(2017, 0, 1, 0), 3.3, 90],\n         *           [Date.UTC(2017, 0, 1, 1), 12.1, 180],\n         *           [Date.UTC(2017, 0, 1, 2), 11.1, 270]\n         *       ]\n         *    ```\n         *\n         * 2. An array of objects with named values. The following snippet shows only a\n         *    few settings, see the complete options set below. If the total number of\n         *    data points exceeds the series'\n         *    [turboThreshold](#series.area.turboThreshold), this option is not\n         *    available.\n         *    ```js\n         *       data: [{\n         *           x: Date.UTC(2017, 0, 1, 0),\n         *           value: 12.1,\n         *           direction: 90\n         *       }, {\n         *           x: Date.UTC(2017, 0, 1, 1),\n         *           value: 11.1,\n         *           direction: 270\n         *       }]\n         *    ```\n         *\n         * @sample {highcharts} highcharts/chart/reflow-true/\n         *         Numerical values\n         * @sample {highcharts} highcharts/series/data-array-of-arrays/\n         *         Arrays of numeric x and y\n         * @sample {highcharts} highcharts/series/data-array-of-arrays-datetime/\n         *         Arrays of datetime x and y\n         * @sample {highcharts} highcharts/series/data-array-of-name-value/\n         *         Arrays of point.name and y\n         * @sample {highcharts} highcharts/series/data-array-of-objects/\n         *         Config objects\n         *\n         * @type      {Array<Array<(number|string),number,number>|*>}\n         * @extends   series.line.data\n         * @product   highcharts highstock\n         * @apioption series.windbarb.data\n         */\n        /**\n         * The wind speed in meters per second.\n         *\n         * @type      {number|null}\n         * @product   highcharts highstock\n         * @apioption series.windbarb.data.value\n         */\n        /**\n         * The wind direction in degrees, where 0 is north (pointing towards south).\n         *\n         * @type      {number}\n         * @product   highcharts highstock\n         * @apioption series.windbarb.data.direction\n         */\n        ''; // adds doclets above to transpiled file\n\n        return WindbarbSeries;\n    });\n    _registerModule(_modules, 'masters/modules/windbarb.src.js', [], function () {\n\n\n    });\n}));"],"names":["className","props","today","Date","selected","startDate","onChange","handleStartDateChange","selectsStart","endDate","minDate","subDays","maxDays","maxDate","handleEndDateChange","selectsEnd","addDays","onClick","setGraphDates","cardinalToDeg","direction","parseFloat","getFilteredData","data","dataType","m","forEach","element","pstTime","DateTime_UTC","push","getTime","reverse","removePast","date","undefined","shift","MetChart","fromDate","id","dataType2","chartProps","chartComponent","useRef","useState","chartOptions","setChartOptions","real_time_url","URL","real_search_params","searchParams","set","convertDate","search","toString","url","search_params","new_url","useFetch","isLoading","realTimeData","useEffect","console","log","filteredData","filteredRealTimeData","length","lastdate","dataLastDate","realDataLastDate","realDataFirstDate","getDay","filteredData2","filteredRealTimeData2","series","xAxis","plotLines","color","width","value","highcharts","Highcharts","ref","allowChartUpdate","options","highchartsWindbarb","Met","MyAirTemp_RelHumChartProps","chart","zoomType","time","useUTC","title","text","type","yAxis","labels","format","style","colors","opposite","lineColor","lineWidth","tooltip","formatter","DayOfMonth","this","x","getDate","getMonth","getFullYear","getHours","getMinutes","concat","points","map","point","name","y","split","dashStyle","updateTime","setTime","endTime","MyAtmPressureChartProps","headerFormat","pointFormat","MyWindSpeedDirChart","offset","tickPositions","max","tickInterval","gridLineWidth","plotOptions","scatter","marker","radius","states","hover","enabled","line","solarRadiationChartProps","lastWeek","setStartDate","setEndDate","startGraphDate","setGraphStartDate","endGraphDate","setGraphEndDate","DataDisclaimer","DateRangePicker","e","year","month","day","num","setDate","compareDate","__WEBPACK_EXTERNAL_MODULE_1__","self","module","exports","require","__webpack_require__","moduleId","installedModules","i","l","modules","call","c","d","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","_extends","assign","target","arguments","source","key","apply","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","minLen","_arrayLikeToArray","slice","constructor","Array","from","test","iter","Symbol","iterator","isArray","len","arr2","_typeof","obj","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","useIsomorphicLayoutEffect","window","useLayoutEffect","HighchartsReact","forwardRef","containerRef","chartRef","createChart","H","constructorType","current","callback","warn","immutable","update","updateArgs","destroy","useImperativeHandle","container","containerProps","memo","factory","_registerModule","path","args","fn","_modules","ColumnSeries","Series","U","OnSeriesComposition","columnProto","seriesProto","defined","stableSort","getPlotBox","onSeries","translate","lastPoint","optionsOnSeries","step","onData","inverted","cursor","onKey","rightPoint","xOffset","lastX","currentDataGrouping","a","b","leftPoint","distanceRatio","stackIndex","composedClasses","compose","SeriesClass","seriesProto_1","__extends","extendStatics","setPrototypeOf","__proto__","__","create","isNumber","_super","WindbarbPoint","_this","WindbarbPoint.prototype.isValid","A","SeriesRegistry","animObject","noop","extend","merge","pick","WindbarbSeries","registerApproximation","WindbarbSeries.registerApproximation","H.approximations.windbarb","values","directions","vectorX","vectorY","Math","cos","sin","sum","atan2","WindbarbSeries.prototype.init","WindbarbSeries.prototype.pointAttribs","state","stroke","strokeWidth","WindbarbSeries.prototype.windArrow","knots","u","vectorLength","pos","renderer","symbols","circle","barbs","WindbarbSeries.prototype.drawPoints","shapeOffset","plotX","plotY","clip","markerGroup","windArrow","translateX","translateY","yOffset","rotation","styledMode","pointAttribs","WindbarbSeries.prototype.animate","init","attr","opacity","animate","animation","WindbarbSeries.prototype.markerAttribs","WindbarbSeries.prototype.getExtremes","WindbarbSeries.prototype.shouldShowTooltip","dataGrouping","approximation","groupPixelWidth","lineWidthPlus","colorKey","beaufortFloor","beaufortName","parallelArrays","pointArrayMap","pointClass","trackerGroups","invertGroups","level","define"],"sourceRoot":""}